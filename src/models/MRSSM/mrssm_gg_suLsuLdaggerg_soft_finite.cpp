double MRSSM::matrixSoft_gg_suLsuLdaggerg_finite(const double alphas, const double S, const double th, const double dS, const double mu) const {
   const double b = std::sqrt(1. - 4.*pow<2>(MassSq)/S);
   const double lndS = std::log(dS);
   const double cth = std::cos(th);
   const double mu2 = pow<2>(mu);
   const double res = ((1 - 2*pow<2>(b) + 2*pow<4>(b) - 2*pow<4>(b)*pow<2>(cth) + pow<4>(b)*pow<4>(cth))*(2*(1 + pow<2>(b))*(-22 + 9*pow<2>(b) + 9*pow<2>(b)*cos(2*th))*polylogarithm::Li2((2*b)/(1 + b)) + 36*b*((-5 + 3*b*cth)*(-1 + 3*b*cth)*polylogarithm::Li2((b*(1 + cth))/(-1 + b)) + (1 + 3*b*cth)*(5 + 3*b*cth)*(polylogarithm::Li2((b - b*cth)/(-1 + b)) - polylogarithm::Li2((b*(1 + cth))/(-1 + b*cth))) - (-5 + 3*b*cth)*(-1 + 3*b*cth)*polylogarithm::Li2((b*(-1 + cth))/(1 + b*cth))) - (11 + 90*b + 11*pow<2>(b))*pow<2>(log(-1 + 2/(1 + b))) + 324*pow<2>(b)*cth*(pow<2>(log((-1 + b)/(-1 + b*cth))) - pow<2>(log((1 - b)/(1 + b*cth))) + 4*lndS*log(-1 + 2/(1 + b*cth)) + log(pow<2>(1 + b*cth)/pow<2>(-1 + b*cth))*log(mu2/S)) + 4*atanh(b)*(112 + 22*(1 + pow<2>(b))*lndS + 9*pow<2>(b)*pow<2>(cth)*(16 + (1 + pow<2>(b))*log(mu2/S))) + 2*(504*b*pow<2>(lndS) + (112*b + 11*(1 + pow<2>(b))*log(-1 + 2/(1 + b)))*log(mu2/S) + 126*b*pow<2>(log(mu2/S)) - 56*b*lndS*(4 + 9*log(mu2) - 9*log(S)) + 45*b*(pow<2>(log((-1 + b)/(-1 + b*cth))) + pow<2>(log((1 - b)/(1 + b*cth))) + log(pow<2>(-1 + pow<2>(b)*pow<2>(cth))/pow<2>(-1 + pow<2>(b)))*log((pow<2>(dS)*S)/mu2))) + 9*pow<2>(b)*pow<2>(cth)*(4*(1 + pow<2>(b))*lndS*log(-1 + 2/(1 + b)) + (1 - 18*b + pow<2>(b))*pow<2>(log(-1 + 2/(1 + b))) + 2*b*(2*log(mu2/S)*(8 + 9*log(mu2) - 9*log(S)) + 8*lndS*(-4 + 9*log((dS*S)/mu2)) + 9*(pow<2>(log((-1 + b)/(-1 + b*cth))) + pow<2>(log((1 - b)/(1 + b*cth))) + log(pow<2>(-1 + pow<2>(b)*pow<2>(cth))/pow<2>(-1 + pow<2>(b)))*log((pow<2>(dS)*S)/mu2))))))/(144.*b*pow<2>(-1 + pow<2>(b)*pow<2>(cth))*pow<2>(pi));
   return pow<3>(alphas*pi)*res;
}