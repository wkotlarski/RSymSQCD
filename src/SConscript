import os
import ConfigParser

Config = ConfigParser.ConfigParser()
Config.read("../configure.ini")

env = Environment(ENV = os.environ)

env.Replace( CXX = Config.get('compiler', 'compiler') )
env.Prepend(
   CPPPATH = [  
      os.popen('lhapdf-config --incdir').read().strip(), 
      Config.get('Cuba', 'inc'), 
      Config.get('RK', 'inc'),
      Config.get('LoopTools', 'inc'),
      '../include',
      os.environ['BOOST_ROOT'],
      '/usr/include/eigen3'
   ],
   # -march=native throws "no such instruction: `vmovd %xmm0, %eax'" errors
   CXXFLAGS = '-std=c++14 ' + Config.get('compiler', 'flags') # -mno-avx'
)

if 'icpc' in Config.get('compiler', 'compiler'):
   fortran_libs = [ 'ifcore', 'ifport' ]
elif 'g++' in Config.get('compiler', 'compiler'):
   fortran_libs = [ 'gfortran' ]   
elif 'clang++' in Config.get('compiler', 'compiler'):
   fortran_libs = [ 'gfortran' ]   
else:
   print "Couldn't recognize the compiler. Only GNU g++ and Intel icpc are supported"
   exit()


env.Program(   
   '../bin/RSymSQCD', 
   [ Glob( '*.cpp' ) ], 
   # add 'ifcore', 'ifport' if using intel compiler suite
   # or gfortran if using gcc suite 
   LIBS = fortran_libs + [ 'LHAPDF', 'cuba', 'rk', File(Config.get('LoopTools', 'lib')), 'boost_program_options' ],
   LIBPATH = [ 
      os.popen('lhapdf-config --libdir').read().strip(), 
      Config.get('Cuba', 'lib'), 
      Config.get('RK', 'lib'),
      Config.get('compiler', 'libs')
   ] 
)
